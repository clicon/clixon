#
# ***** BEGIN LICENSE BLOCK *****
# 
# Copyright (C) 2009-2016 Olof Hagsand and Benny Holmgren
# Copyright (C) 2017-2019 Olof Hagsand
# Copyright (C) 2020-2021 Olof Hagsand and Rubicon Communications, LLC(Netgate)
#
# This file is part of CLIXON
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Alternatively, the contents of this file may be used under the terms of
# the GNU General Public License Version 3 or later (the "GPL"),
# in which case the provisions of the GPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of the GPL, and not to allow others to
# use your version of this file under the terms of Apache License version 2, 
# indicate your decision by deleting the provisions above and replace them with
# the notice and other provisions required by the GPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the Apache License version 2 or the GPL.
#
# ***** END LICENSE BLOCK *****
#
# This makefile supports several restconf web packages in compile-time depending
# on the value of the with_restconf configure option
#
VPATH       	= @srcdir@
srcdir  	= @srcdir@
top_srcdir  	= @top_srcdir@
CC		= @CC@
CFLAGS  	= @CFLAGS@ 
LINKAGE         = @LINKAGE@
INSTALLFLAGS  	= @INSTALLFLAGS@ 
LDFLAGS 	= @LDFLAGS@

prefix 		= @prefix@
datarootdir	= @datarootdir@
exec_prefix 	= @exec_prefix@
bindir 		= @bindir@
libdir		= @libdir@
sbindir 	= @sbindir@
mandir		= @mandir@
libexecdir	= @libexecdir@
localstatedir	= @localstatedir@
sysconfdir	= @sysconfdir@
includedir	= @includedir@
HOST_VENDOR     = @host_vendor@

wwwdir          = @wwwdir@

# one of fcgi or native:
with_restconf	= @with_restconf@

SH_SUFFIX	= .so
CLIXON_MAJOR    = @CLIXON_VERSION_MAJOR@
CLIXON_MINOR    = @CLIXON_VERSION_MINOR@

# Use this clixon lib for linking
ifeq ($(LINKAGE),dynamic)
	CLIXON_LIB	= libclixon$(SH_SUFFIX).$(CLIXON_MAJOR).$(CLIXON_MINOR)
else
	CLIXON_LIB	= libclixon.a
endif

# For dependency
LIBDEPS		= $(top_srcdir)/lib/src/$(CLIXON_LIB) 

LIBS          = -L$(top_srcdir)/lib/src $(top_srcdir)/lib/src/$(CLIXON_LIB) @LIBS@ 

CPPFLAGS  	= @CPPFLAGS@


ifeq ($(LINKAGE),dynamic)
CPPFLAGS  	+= -fPIC
endif

INCLUDES	= -I. -I$(top_srcdir)/lib/src -I$(top_srcdir)/lib -I$(top_srcdir)/include -I$(top_srcdir) @INCLUDES@

# Application
APPL	  = clixon_restconf

# Common source - not accessible from plugin - independent of restconf package (fcgi|native)
APPSRC    =
APPSRC   += restconf_api.c # maybe empty
APPSRC   += restconf_err.c 
APPSRC   += restconf_methods.c
APPSRC   += restconf_methods_post.c
APPSRC   += restconf_methods_get.c
APPSRC   += restconf_methods_patch.c
APPSRC   += restconf_root.c
APPSRC   += restconf_main_$(with_restconf).c
ifeq ($(with_restconf),native)
APPSRC   += restconf_native.c
APPSRC   += restconf_evhtp.c   # HTTP/1
APPSRC   += restconf_nghttp2.c # HTTP/2
endif

# Fcgi-specific source including main
ifeq ($(with_restconf),fcgi)
# Streams notifications have some fcgi specific handling
APPSRC   += restconf_stream_$(with_restconf).c
endif

APPOBJ    = $(APPSRC:.c=.o)

# Accessible from plugin
# XXX actually this does not work properly, there are functions in lib
# (eg restconf_method_notallowed) that uses symbols in restconf_api that
# are not in the lib.
LIBSRC    = restconf_lib.c
LIBSRC   += restconf_handle.c 
LIBSRC   += restconf_api_$(with_restconf).c 

LIBOBJ    = $(LIBSRC:.c=.o)

# This lib is very small but used for clixon restconf applications to access clixon restconf lib
# functions. Mostly for future use
MYNAME	        = clixon_restconf
MYLIBDYNAMIC    = lib$(MYNAME)$(SH_SUFFIX).$(CLIXON_MAJOR).$(CLIXON_MINOR)
MYLIBSO         = lib$(MYNAME)$(SH_SUFFIX).$(CLIXON_MAJOR)
MYLIBLINK       = lib$(MYNAME)$(SH_SUFFIX)
MYLIBSTATIC     = lib$(MYNAME).a

ifeq ($(LINKAGE),dynamic)
	MYLIB        = $(MYLIBDYNAMIC)
else
	MYLIB        = $(MYLIBSTATIC)
endif

all:	 $(MYLIB) $(APPL)

# Dependency of clixon library
$(top_srcdir)/lib/src/$(CLIXON_LIB):
	(cd $(top_srcdir)/lib/src && $(MAKE) $(MFLAGS) $(CLIXON_LIB))

clean:
	rm -f $(LIBOBJ) *.core $(APPL) $(APPOBJ) *.o $(MYLIB) $(MYLIBSO) $(MYLIBLINK) # extra .o to clean residue if with_restconf changes
	rm -f *.gcda *.gcno *.gcov # coverage

distclean: clean
	rm -f Makefile *~ .depend

# Put demon in bin 
# Put other executables in libexec/
# Also create a libexec/ directory for writeable/temporary files.
# Put config file in etc/
# Also a rule for letting www-dir be owned by www-data, which only works for sudo
install:	install-lib $(APPL)
	install -d -m 0755 $(DESTDIR)$(sbindir)
	install -m 0755 $(INSTALLFLAGS) $(APPL) $(DESTDIR)$(sbindir)
ifeq ($(with_restconf),fcgi)
	install -d -m 0755 $(DESTDIR)$(wwwdir)
endif

install-lib: $(MYLIB)
	install -d -m 0755 $(DESTDIR)$(libdir)
	install -m 0644 $(INSTALLFLAGS) $(MYLIB) $(DESTDIR)$(libdir)
ifeq ($(LINKAGE),dynamic)
	ln -sf $(MYLIB) $(DESTDIR)$(libdir)/$(MYLIBSO)     # -l:libclixon_restconf.so.2
	ln -sf $(MYLIBSO) $(DESTDIR)$(libdir)/$(MYLIBLINK) # -l:libclixon_restconf.so
endif

install-include:	clixon_restconf.h
	install -d -m 0755 $(DESTDIR)$(includedir)/clixon
	install -m 0644 $^ $(DESTDIR)$(includedir)/clixon

uninstall:
	rm -f $(DESTDIR)$(sbindir)/$(APPL)
	rm -f $(DESTDIR)$(libdir)/$(MYLIBLINK)*
	rm -f $(DESTDIR)$(libdir)/$(MYLIB)

.SUFFIXES:
.SUFFIXES: .c .o

.c.o:
	$(CC) $(INCLUDES) -D__PROGRAM__=\"clixon_restconf\" $(CPPFLAGS) $(CFLAGS) -c $<

# Note LIBDEPS is in lib/src and will always be remade du to a date dependency
$(APPL) : $(APPOBJ) $(MYLIB) $(LIBDEPS)
	$(CC) $(LDFLAGS) $(APPOBJ) -L. $(MYLIB) $(LIBS) -o $@

ifeq ($(HOST_VENDOR),apple)
$(MYLIBDYNAMIC) : $(LIBOBJ) $(LIBDEPS)
	$(CC) $(LDFLAGS) -shared -undefined dynamic_lookup -o $@ $(LIBOBJ) $(LIBS)
else
$(MYLIBDYNAMIC) : $(LIBOBJ) $(LIBDEPS)
	$(CC) $(LDFLAGS) -shared -Wl,-soname,$(MYLIBSO) -o $@ $(LIBOBJ) $(LIBS) -Wl,-soname=$(MYLIBSO)
endif

# link-name is needed for application linking, eg for clixon_cli and clixon_config
$(MYLIBLINK) : $(MYLIB)

$(MYLIBSTATIC) : $(LIBOBJ) $(LIBDEPS)
	ar -crs $@ $(LIBOBJ) $(LIBDEPS)

TAGS:
	find . -name '*.[chyl]' -print | etags -

depend:
	$(CC) $(DEPENDFLAGS) @DEFS@ $(INCLUDES) $(CFLAGS) -MM $(APPFCGI) $(APPSRC) > .depend

#include .depend
