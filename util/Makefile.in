#
# ***** BEGIN LICENSE BLOCK *****
# 
# Copyright (C) 2009-2016 Olof Hagsand and Benny Holmgren
# Copyright (C) 2017-2019 Olof Hagsand
# Copyright (C) 2020-2021 Olof Hagsand and Rubicon Communications, LLC(Netgate)
#
# This file is part of CLIXON
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Alternatively, the contents of this file may be used under the terms of
# the GNU General Public License Version 3 or later (the "GPL"),
# in which case the provisions of the GPL are applicable instead
# of those above. If you wish to allow use of your version of this file only
# under the terms of the GPL, and not to allow others to
# use your version of this file under the terms of Apache License version 2, 
# indicate your decision by deleting the provisions above and replace them with
# the notice and other provisions required by the GPL. If you do not delete
# the provisions above, a recipient may use your version of this file under
# the terms of any one of the Apache License version 2 or the GPL.
#
# ***** END LICENSE BLOCK *****
#
prefix 		= @prefix@
datarootdir	= @datarootdir@
srcdir  	= @srcdir@
top_srcdir  	= @top_srcdir@
exec_prefix 	= @exec_prefix@
bindir 		= @bindir@
libdir		= @libdir@
dbdir		= @prefix@/db
mandir		= @mandir@
libexecdir	= @libexecdir@
localstatedir	= @localstatedir@
sysconfdir	= @sysconfdir@
HOST_VENDOR     = @host_vendor@
with_restconf	= @with_restconf@
HAVE_LIBXML2	= @HAVE_LIBXML2@

SH_SUFFIX	= @SH_SUFFIX@

CLIXON_VERSION  = @CLIXON_VERSION@
CLIXON_MAJOR    = @CLIXON_VERSION_MAJOR@
CLIXON_MINOR    = @CLIXON_VERSION_MINOR@

VPATH       	= @srcdir@
CC		= @CC@
CFLAGS  	= @CFLAGS@
INSTALL		= @INSTALL@
INSTALL_LIB	= @INSTALL@
INSTALLFLAGS  	= @INSTALLFLAGS@
LDFLAGS 	= @LDFLAGS@
LIBS    	= @LIBS@
CPPFLAGS  	= @CPPFLAGS@
LINKAGE         = @LINKAGE@

INCLUDES        = -I. @INCLUDES@ -I$(top_srcdir)/lib -I$(top_srcdir)/include

ifeq ($(LINKAGE),static)
   CLIXON_LIB 		= libclixon.a
   CLIXON_BACKEND_LIB	= libclixon_backend.a # for util_validate
else
   CLIXON_LIB           = libclixon$(SH_SUFFIX).$(CLIXON_MAJOR).$(CLIXON_MINOR)
   CLIXON_BACKEND_LIB	= libclixon_backend$(SH_SUFFIX).$(CLIXON_MAJOR).$(CLIXON_MINOR)
endif

# For dependency. A little strange that we rely on it being built in the src dir
# even though it may exist in $(libdir). But the new version may not have been installed yet.
LIBDEPS	    = $(top_srcdir)/apps/backend/$(CLIXON_BACKEND_LIB)
LIBDEPS	   += $(top_srcdir)/lib/src/$(CLIXON_LIB)


# Utilities, unit testings. Not installed.
APPSRC    = clixon_util_xml.c
APPSRC   += clixon_util_xml_mod.c
APPSRC   += clixon_util_json.c
APPSRC   += clixon_util_yang.c
APPSRC   += clixon_util_xpath.c
APPSRC   += clixon_util_path.c
APPSRC   += clixon_util_datastore.c
APPSRC   += clixon_util_regexp.c
APPSRC   += clixon_util_socket.c
APPSRC   += clixon_util_validate.c 
APPSRC   += clixon_netconf_ssh_callhome.c
APPSRC   += clixon_netconf_ssh_callhome_client.c
ifdef with_restconf
APPSRC   += clixon_util_stream.c # Needs curl
endif
ifdef with_http2
APPSRC   += clixon_util_ssl.c # requires http/2
#APPSRC   += clixon_util_grpc.c # work in progress
endif


APPS	  = $(APPSRC:.c=)

all:	 $(APPS)

# Dependency of clixon library
$(top_srcdir)/lib/src/$(CLIXON_LIB):
	(cd $(top_srcdir)/lib/src && $(MAKE) $(MFLAGS) $(CLIXON_LIB))

$(top_srcdir)/lib/src/$(CLIXON_BACKEND_LIB):
	(cd $(top_srcdir)/apps/backend && $(MAKE) $(MFLAGS) $(CLIXON_BACKEND_LIB))

clean:
	rm -f $(APPS) clixon_util_stream *.core
	rm -f *.gcda *.gcno *.gcov # coverage

# APPS
clixon_util_xml: clixon_util_xml.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_json: clixon_util_json.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_yang: clixon_util_yang.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_xpath: clixon_util_xpath.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_path: clixon_util_path.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_datastore: clixon_util_datastore.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_xml_mod: clixon_util_xml_mod.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_regexp: clixon_util_regexp.c $(LIBDEPS)
	$(CC) $(INCLUDES) -I /usr/include/libxml2 $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_socket: clixon_util_socket.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

ifeq ($(LINKAGE),static)
clixon_util_validate: clixon_util_validate.c $(LIBDEPS) 
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) clixon_util_validate.c $(LIBS) $(LIBDEPS) -o $@
else
clixon_util_validate: clixon_util_validate.c $(LIBDEPS) 
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -l clixon_backend -o $@
endif
ifdef with_restconf
clixon_util_stream: clixon_util_stream.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -lcurl -o $@

clixon_util_ssl: clixon_util_ssl.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@

clixon_util_grpc: clixon_util_grpc.c $(LIBDEPS)
	$(CC) $(INCLUDES) $(CPPFLAGS) @CFLAGS@ $(LDFLAGS) $^ $(LIBS) -o $@
endif

distclean: clean
	rm -f Makefile *~ .depend

install: 
	install -d -m 0755 $(DESTDIR)$(bindir)
	install -m 0755 $(INSTALLFLAGS) $(APPS) $(DESTDIR)$(bindir)

install-include:

install-lib:

uninstall: 

TAGS:
	find . -name '*.[ch]' -print | etags -

depend:
	$(CC) $(DEPENDFLAGS) @DEFS@ $(INCLUDES) $(CFLAGS) -MM $(APPSRC) > .depend

#include .depend

